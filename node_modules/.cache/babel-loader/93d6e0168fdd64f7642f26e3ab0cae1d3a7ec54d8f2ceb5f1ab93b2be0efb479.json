{"ast":null,"code":"export function validarRun(run) {\n  run = run.replace(/\\s+/g, \"\").toUpperCase();\n  if (!/^\\d{7,8}[0-9K]$/.test(run)) return false;\n  const cuerpo = run.slice(0, -1);\n  const dv = run.slice(-1);\n  let suma = 0;\n  let multiplo = 2;\n  for (let i = cuerpo.length - 1; i >= 0; i--) {\n    suma += parseInt(cuerpo[i], 10) * multiplo;\n    multiplo = multiplo < 7 ? multiplo + 1 : 2;\n  }\n  const resto = suma % 11;\n  const dvEsperado = resto === 0 ? \"0\" : resto === 1 ? \"K\" : String(11 - resto);\n  return dv === dvEsperado;\n}\nexport function validarCorreo(correo) {\n  const regex = /^[\\w._%+-]+@(duoc\\.cl|profesor\\.duoc\\.cl|gmail\\.com)$/i;\n  return regex.test(correo);\n}\nexport function validarPassword(password) {\n  return password.length >= 6;\n}\nexport function validarEdad(fechaNacimiento) {\n  const hoy = new Date();\n  const fechaNac = new Date(fechaNacimiento);\n  let edad = hoy.getFullYear() - fechaNac.getFullYear();\n  const mes = hoy.getMonth() - fechaNac.getMonth();\n  if (mes < 0 || mes === 0 && hoy.getDate() < fechaNac.getDate()) {\n    edad--;\n  }\n  return edad;\n}\nexport function validarCodigoPromo(codigo) {\n  return codigo.toUpperCase() === \"FELICES50\";\n}\nexport function validarCamposVacios(...campos) {\n  return campos.every(campo => campo && campo.trim() !== \"\");\n}","map":{"version":3,"names":["validarRun","run","replace","toUpperCase","test","cuerpo","slice","dv","suma","multiplo","i","length","parseInt","resto","dvEsperado","String","validarCorreo","correo","regex","validarPassword","password","validarEdad","fechaNacimiento","hoy","Date","fechaNac","edad","getFullYear","mes","getMonth","getDate","validarCodigoPromo","codigo","validarCamposVacios","campos","every","campo","trim"],"sources":["C:/Users/Duoc/Desktop/ejercicio/Proyecto-Fullstack-2---Pasteleria-Mil-Sabores/src/utils/validaciones.js"],"sourcesContent":["export function validarRun(run) {\r\n    run = run.replace(/\\s+/g, \"\").toUpperCase();\r\n    if (!/^\\d{7,8}[0-9K]$/.test(run)) return false;\r\n\r\n    const cuerpo = run.slice(0, -1);\r\n    const dv = run.slice(-1);\r\n\r\n    let suma = 0;\r\n    let multiplo = 2;\r\n\r\n    for (let i = cuerpo.length - 1; i >= 0; i--) {\r\n        suma += parseInt(cuerpo[i], 10) * multiplo;\r\n        multiplo = multiplo < 7 ? multiplo + 1 : 2;\r\n    }\r\n    const resto = suma % 11;\r\n    const dvEsperado = resto === 0 ? \"0\" : resto === 1 ? \"K\" : String(11 - resto);\r\n    return dv === dvEsperado;\r\n}\r\n\r\nexport function validarCorreo(correo) {\r\n    const regex = /^[\\w._%+-]+@(duoc\\.cl|profesor\\.duoc\\.cl|gmail\\.com)$/i;\r\n    return regex.test(correo);\r\n}\r\nexport function validarPassword(password) {\r\n    return password.length >= 6;\r\n}\r\n\r\nexport function validarEdad(fechaNacimiento) {\r\n    const hoy = new Date();\r\n    const fechaNac = new Date(fechaNacimiento);\r\n    let edad = hoy.getFullYear() - fechaNac.getFullYear();\r\n    const mes = hoy.getMonth() - fechaNac.getMonth();\r\n    if (mes < 0 || (mes === 0 && hoy.getDate() < fechaNac.getDate())) {\r\n        edad--;\r\n    }\r\n    return edad;\r\n}\r\n\r\nexport function validarCodigoPromo(codigo) {\r\n    return codigo.toUpperCase() === \"FELICES50\";\r\n}\r\n\r\nexport function validarCamposVacios(...campos) {\r\n    return campos.every(campo => campo && campo.trim() !== \"\");\r\n}"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,GAAG,EAAE;EAC5BA,GAAG,GAAGA,GAAG,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC;EAC3C,IAAI,CAAC,iBAAiB,CAACC,IAAI,CAACH,GAAG,CAAC,EAAE,OAAO,KAAK;EAE9C,MAAMI,MAAM,GAAGJ,GAAG,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,MAAMC,EAAE,GAAGN,GAAG,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;EAExB,IAAIE,IAAI,GAAG,CAAC;EACZ,IAAIC,QAAQ,GAAG,CAAC;EAEhB,KAAK,IAAIC,CAAC,GAAGL,MAAM,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACzCF,IAAI,IAAII,QAAQ,CAACP,MAAM,CAACK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGD,QAAQ;IAC1CA,QAAQ,GAAGA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC,GAAG,CAAC;EAC9C;EACA,MAAMI,KAAK,GAAGL,IAAI,GAAG,EAAE;EACvB,MAAMM,UAAU,GAAGD,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGE,MAAM,CAAC,EAAE,GAAGF,KAAK,CAAC;EAC7E,OAAON,EAAE,KAAKO,UAAU;AAC5B;AAEA,OAAO,SAASE,aAAaA,CAACC,MAAM,EAAE;EAClC,MAAMC,KAAK,GAAG,wDAAwD;EACtE,OAAOA,KAAK,CAACd,IAAI,CAACa,MAAM,CAAC;AAC7B;AACA,OAAO,SAASE,eAAeA,CAACC,QAAQ,EAAE;EACtC,OAAOA,QAAQ,CAACT,MAAM,IAAI,CAAC;AAC/B;AAEA,OAAO,SAASU,WAAWA,CAACC,eAAe,EAAE;EACzC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAACF,eAAe,CAAC;EAC1C,IAAII,IAAI,GAAGH,GAAG,CAACI,WAAW,CAAC,CAAC,GAAGF,QAAQ,CAACE,WAAW,CAAC,CAAC;EACrD,MAAMC,GAAG,GAAGL,GAAG,CAACM,QAAQ,CAAC,CAAC,GAAGJ,QAAQ,CAACI,QAAQ,CAAC,CAAC;EAChD,IAAID,GAAG,GAAG,CAAC,IAAKA,GAAG,KAAK,CAAC,IAAIL,GAAG,CAACO,OAAO,CAAC,CAAC,GAAGL,QAAQ,CAACK,OAAO,CAAC,CAAE,EAAE;IAC9DJ,IAAI,EAAE;EACV;EACA,OAAOA,IAAI;AACf;AAEA,OAAO,SAASK,kBAAkBA,CAACC,MAAM,EAAE;EACvC,OAAOA,MAAM,CAAC7B,WAAW,CAAC,CAAC,KAAK,WAAW;AAC/C;AAEA,OAAO,SAAS8B,mBAAmBA,CAAC,GAAGC,MAAM,EAAE;EAC3C,OAAOA,MAAM,CAACC,KAAK,CAACC,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}